services:
  # SQLFlow demo container
  sqlflow:
    build:
      context: .
      dockerfile: Dockerfile
    image: sqlflow-ecommerce-demo:latest
    container_name: sqlflow-demo
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      mockserver:
        condition: service_started
    volumes:
      - ./target:/app/target
      - ./data:/app/sqlflow/demos/ecommerce_demo/data
      - ./pipelines:/app/sqlflow/demos/ecommerce_demo/pipelines
      - ..:/app/sqlflow
    environment:
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - API_TOKEN=demo-token
      - SQLFLOW_LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    tty: true
    stdin_open: true

  # PostgreSQL database service
  postgres:
    image: postgres:14-alpine
    container_name: sqlflow-postgres
    environment:
      POSTGRES_USER: sqlflow
      POSTGRES_PASSWORD: sqlflow123
      POSTGRES_DB: ecommerce
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sqlflow -d ecommerce"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MinIO service (S3-compatible storage)
  minio:
    image: minio/minio:RELEASE.2023-09-16T01-01-47Z
    container_name: sqlflow-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Initialize MinIO buckets and sample data
  minio-init:
    image: minio/mc:RELEASE.2023-09-07T22-48-55Z
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/analytics;
      /usr/bin/mc policy set public myminio/analytics;
      exit 0;
      "

  # Mock server for REST API testing
  mockserver:
    image: mockserver/mockserver:mockserver-5.15.0
    container_name: sqlflow-mockserver
    environment:
      MOCKSERVER_SERVER_PORT: 1080
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/mockserver-config.json
    ports:
      - "1080:1080"
    volumes:
      - ./mock-config:/config

volumes:
  postgres-data:
  minio-data:
