[project]
name = "sqlflow-core"
version = "0.1.5"
description = "SQLFlow is a SQL-native engine for defining, orchestrating, and managing data workflowsâ€”empowering analysts and engineers to build robust, production-grade pipelines using only SQL."
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    {name = "Chanh Le", email = "giaosudau@gmail.com"},
]
keywords = [
    "sql",
    "data-pipeline",
    "etl",
    "workflow",
    "duckdb",
    "analytics",
    "data-engineering"
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis"
]
dependencies = [
    "duckdb>=1.2.0",
    "pandas>=2.0.0",
    "pyarrow>=10.0.0",
    "click>=8.0.0",
    "networkx>=3.0",
    "typer==0.9.0",
    "rich>=13.0.0",
    "psycopg2-binary>=2.9.0",
    "boto3>=1.26.0",
    "requests>=2.28.0",
    "pyyaml>=6.0",
    "typing-extensions>=4.0.0",
    "google-api-python-client>=2.0.0",
    "google-auth>=2.0.0",
    "google-auth-oauthlib>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.0.0",
    "ruff>=0.11.12",
    "pre-commit>=3.0.0",
    "mypy>=1.0.0",
    "psutil>=5.9.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.0.0",
    "mock>=5.0.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/sqlflow/sqlflow"
Documentation = "https://github.com/sqlflow/sqlflow#readme"
Source = "https://github.com/sqlflow/sqlflow"
Tracker = "https://github.com/sqlflow/sqlflow/issues"

[project.scripts]
sqlflow = "sqlflow.cli.main:cli"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = {find = {where = ["."], include = ["sqlflow*"]}}

[tool.setuptools.package-data]
sqlflow = ["py.typed"]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
# Enable rule categories similar to flake8
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings  
    "F",    # Pyflakes
    "D",    # pydocstyle
    "C90",  # mccabe complexity
]

# Ignore rules equivalent to flake8 configuration
ignore = [
    "E501",  # line-too-long (let formatter handle this)
    "E221",  # multiple spaces before operator
    "E222",  # multiple spaces after operator  
    "E223",  # tab before operator
    "E224",  # tab after operator
    "E303",  # too many blank lines
    "E301",  # expected 1 blank line
    "E302",  # expected 2 blank lines
    "E402",  # module level import not at top of file
    "F401",  # unused import
    "F841",  # unused variable
    "E741",  # ambiguous variable name
    "W291",  # trailing whitespace
    "W293",  # blank line contains whitespace
    "D",     # Missing docstring
    # Note: W503, W504, E203 are not valid rules in Ruff
]

# Relax rules for test files
[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D",      # All docstring rules
    "E501",   # line-too-long
    "F401",   # unused-import
    "F841",   # unused-variable
    "E402",   # module-level-import-not-at-top-of-file
    "C901",   # too-complex
    "E712",   # true-false-comparison
    "E721",   # type-comparison
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = [
    "tests",
]
